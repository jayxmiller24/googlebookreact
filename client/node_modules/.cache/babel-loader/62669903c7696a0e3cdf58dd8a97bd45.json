{"ast":null,"code":"import _defineProperty from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jaymiller/Desktop/googlebookreact/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jaymiller/Desktop/googlebookreact/client/src/components/Wrapper/index.js\";\nimport React from 'react';\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport api from \"../../utils/googleApi.js\";\nimport SubmitButton from \"../../components/SubmitButton\";\n\nvar Wrapper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wrapper, _React$Component);\n\n  function Wrapper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Wrapper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Wrapper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: [],\n      search: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.searchBooks = function (query) {\n      api.search(query).then(function (res) {\n        return _this.setState({\n          result: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.searchBooks(_this.state.search);\n    };\n\n    return _this;\n  }\n\n  _createClass(Wrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.searchBooks(\"IT\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Google Books React\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.search,\n        onChange: this.handleInputChange,\n        name: \"search\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Submit Book\")), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.result.map(function (results) {\n        return React.createElement(\"li\", {\n          className: \"list-group-item\",\n          key: results.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Title: \", results.volumeInfo.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Author:\", results.volumeInfo.authors), React.createElement(\"img\", {\n          src: results.volumeInfo.imageLinks.smallThumbnail,\n          alt: results.volumeInfo.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Description: \", results.volumeInfo.description), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: results.volumeInfo.infoLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Link\")), React.createElement(SubmitButton, {\n          bookid: results.id,\n          booktitle: results.volumeInfo.title,\n          bookauthor: results.volumeInfo.authors[0],\n          bookdescriptions: results.volumeInfo.description,\n          bookinfo: results.volumeInfo.infoLink,\n          bookimage: results.volumeInfo.imageLinks.smallThumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Wrapper;\n}(React.Component);\n\nexport default Wrapper;","map":{"version":3,"sources":["/Users/jaymiller/Desktop/googlebookreact/client/src/components/Wrapper/index.js"],"names":["React","Jumbotron","Input","TextArea","FormBtn","api","SubmitButton","Wrapper","state","result","search","handleInputChange","event","target","name","value","setState","searchBooks","query","then","res","data","items","catch","err","console","log","handleFormSubmit","preventDefault","map","results","id","volumeInfo","title","authors","imageLinks","smallThumbnail","description","infoLink","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Jumbotron from \"../../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport api from \"../../utils/googleApi.js\";\n\nimport SubmitButton from \"../../components/SubmitButton\";\n\n\n\n\nclass Wrapper extends React.Component {\n\n    state = {\n        result: [],\n        search: \"\",\n    \n    \n      };\n      componentDidMount() {\n        this.searchBooks(\"IT\");\n    \n      }\n    \n      handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n    \n    \n      searchBooks = query => {\n        api.search(query)\n          .then(res => this.setState({ result: res.data.items }))\n          .catch(err => console.log(err));\n      };\n      handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchBooks(this.state.search);\n    \n      };\n\n      \n    \n    render() {\n        return (\n\n\n            <div className=\"container\">\n                <Jumbotron>\n                    <h1>Google Books React</h1>\n                </Jumbotron>\n                <form>\n                    <Input\n                        value={this.state.search}\n                        onChange={this.handleInputChange}\n                        name=\"search\"\n                        placeholder=\"Title (required)\"\n                    />\n                    <FormBtn\n                        onClick={this.handleFormSubmit}\n                    >\n                        Submit Book\n                          </FormBtn>\n                </form>\n                <ul className=\"list-group\">\n                    {this.state.result.map(results => (\n                        <li className=\"list-group-item\" key={results.id}>\n                            <h5>Title: {results.volumeInfo.title}</h5>\n                            \n                            <h5>Author:{results.volumeInfo.authors}</h5>\n                            <img src={results.volumeInfo.imageLinks.smallThumbnail} alt={results.volumeInfo.title} />\n                            <h5>Description: {results.volumeInfo.description}</h5>\n                            <h5><a href={results.volumeInfo.infoLink}>Link</a></h5>\n                             <SubmitButton \n                                bookid={results.id}\n                                booktitle={results.volumeInfo.title}\n                                bookauthor = {results.volumeInfo.authors[0]}\n                                bookdescriptions={results.volumeInfo.description}\n                                bookinfo = {results.volumeInfo.infoLink}\n                                bookimage = {results.volumeInfo.imageLinks.smallThumbnail}\n\n                            /> \n                        </li>\n                    ))}\n                </ul>\n\n\n\n\n            </div>\n\n        )\n    }\n\n\n}\n\nexport default Wrapper;"]},"metadata":{},"sourceType":"module"}