{"ast":null,"code":"import _defineProperty from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jaymiller/Desktop/googlesearch/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jaymiller/Desktop/googlesearch/client/src/pages/search.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport api from \"../utils/googleApi.js\";\nimport ResultList from \"../components/ResultList\";\nimport API from \"../utils/API\";\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: [],\n      search: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.searchBooks = function (query) {\n      api.search(query).then(function (res) {\n        return _this.setState({\n          result: res.data.items\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      _this.searchBooks(_this.state.search);\n    };\n\n    _this.saveData = function (event) {\n      event.preventDefault();\n      API.saveBook({\n        title: _this.state.result.title,\n        author: _this.state.result.author,\n        description: _this.state.synopsis\n      }).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.searchBooks(\"IT\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Google Books React\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.search,\n        onChange: this.handleInputChange,\n        name: \"search\",\n        placeholder: \"Title (required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit Book\")), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, props.result.map(function (results) {\n        return React.createElement(\"li\", {\n          className: \"list-group-item\",\n          key: results.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Title: \", results.volumeInfo.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Author:\", results.volumeInfo.authors), React.createElement(\"img\", {\n          alt: results.volumeInfo.title,\n          src: results.volumeInfo.imageLinks.smallThumbnail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Description: \", results.volumeInfo.description), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: results.volumeInfo.infoLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Link\")), React.createElement(\"button\", {\n          className: \"btn btn-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Save Book\"));\n      })), \");\", React.createElement(ResultList, {\n        result: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/jaymiller/Desktop/googlesearch/client/src/pages/search.js"],"names":["React","Component","Jumbotron","Input","TextArea","FormBtn","api","ResultList","API","Search","state","result","search","handleInputChange","event","target","name","value","setState","searchBooks","query","then","res","data","items","catch","err","console","log","handleFormSubmit","preventDefault","saveData","saveBook","title","author","description","synopsis","loadBooks","props","map","results","id","volumeInfo","authors","imageLinks","smallThumbnail","infoLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport api from \"../utils/googleApi.js\";\n\nimport ResultList from \"../components/ResultList\"\nimport API from \"../utils/API\";\n\nclass Search extends Component {\n  state = {\n    result: [],\n    search: \"\",\n\n\n  };\n  componentDidMount() {\n    this.searchBooks(\"IT\");\n\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n\n  searchBooks = query => {\n    api.search(query)\n      .then(res => this.setState({ result: res.data.items }))\n\n      .catch(err => console.log(err));\n  };\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n\n  };\n  saveData = event => {\n    event.preventDefault();\n\n    API.saveBook({\n      title: this.state.result.title,\n      author: this.state.result.author,\n      description: this.state.synopsis\n    })\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n\n  }\n\n\n  render() {\n    return (\n\n        <div className = \"container\">\n          <Jumbotron>\n            <h1>Google Books React</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              value={this.state.search}\n              onChange={this.handleInputChange}\n              name=\"search\"\n              placeholder=\"Title (required)\"\n            />\n            <FormBtn\n              onClick={this.handleFormSubmit}\n            >\n              Submit Book\n              </FormBtn>\n          </form>\n\n    <ul className=\"list-group\">\n      {props.result.map(results => (\n        <li className=\"list-group-item\" key={results.id}>\n          <h5>Title: {results.volumeInfo.title}</h5>\n          <h5>Author:{results.volumeInfo.authors}</h5>\n          <img alt={results.volumeInfo.title} src={results.volumeInfo.imageLinks.smallThumbnail}/>\n          <h5>Description: {results.volumeInfo.description}</h5>\n          <h5><a href={results.volumeInfo.infoLink}>Link</a></h5>\n        <button className=\"btn btn-warning\" >Save Book</button>\n        </li>\n      ))}\n    </ul>\n  );\n        <ResultList result={this.state.result}/>\n      </div>\n    );\n  }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}